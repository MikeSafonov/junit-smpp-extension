sourceSets {
    testIntegration {
        java {
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            srcDir file('src/testIntegration/java')
        }
    }
}

configurations {
    testIntegrationImplementation.extendsFrom implementation, testImplementation
    testIntegrationRuntime.extendsFrom runtimeOnly
}

dependencies {
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR6")
    implementation platform("org.springframework.boot:spring-boot-dependencies:2.3.2.RELEASE")
    annotationProcessor platform("org.springframework.boot:spring-boot-dependencies:2.3.1.RELEASE")

    compileOnly("org.springframework.boot:spring-boot-configuration-processor")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

    compileOnly("org.springframework.cloud:spring-cloud-starter")

    api(project(":module-core"))

    testImplementation("org.springframework.boot:spring-boot-starter-test:2.3.2.RELEASE")

    testIntegrationImplementation 'org.awaitility:awaitility:4.0.3'
    testIntegrationImplementation("org.springframework.cloud:spring-cloud-starter")
    testIntegrationImplementation("com.github.mikesafonov:spring-boot-starter-smpp:1.0.0")
}


task testIntegration(type: Test){
    useJUnitPlatform()
    testClassesDirs = sourceSets.testIntegration.output.classesDirs
    classpath = sourceSets.testIntegration.runtimeClasspath
}
